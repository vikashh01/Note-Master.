package FullProject;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import java.time.Duration;
import java.util.List;

public class NotesAutomationTest {
    WebDriver driver;
    WebDriverWait wait;

    @BeforeMethod(alwaysRun = true)
    public void setup() {
        driver = new ChromeDriver();
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10)); 
        wait = new WebDriverWait(driver, Duration.ofSeconds(10)); 
        driver.get("https://notes-makers.vercel.app/");
    }

    @Test(priority = 1)
    public void testSignup() {
        driver.findElement(By.xpath("//strong[text()='Sign Up']")).click();
        
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("name"))).sendKeys("Akash");
        driver.findElement(By.id("email")).sendKeys("akash123@gmail.com");
        driver.findElement(By.id("password")).sendKeys("akash@123");
        driver.findElement(By.id("confirmPassword")).sendKeys("akash@123");

        driver.findElement(By.xpath("//strong[text()='Sign Up']")).click();

        // Verify successful signup
        WebElement profileBtn = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//strong[text()='Profile']")));
        Assert.assertTrue(profileBtn.isDisplayed(), "Signup Failed!");
    }

    @Test(priority = 2)
    public void testLogin() {
        driver.findElement(By.xpath("//strong[text()='Login']")).click();
        
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("email"))).sendKeys("akash123@gmail.com");
        driver.findElement(By.id("password")).sendKeys("akash@123");
        driver.findElement(By.xpath("//strong[text()='Login']")).click();

        // Verify login
        WebElement profileBtn = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//strong[text()='Profile']")));
        Assert.assertTrue(profileBtn.isDisplayed(), "Login Failed!");
    }

    @Test(priority = 3)
    public void testCreateNote() {
        driver.findElement(By.xpath("//strong[text()='Write Notes']")).click();
        
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("input[placeholder='Notes Title']"))).sendKeys("First Note");
        
        WebElement editor = driver.findElement(By.cssSelector(".ql-editor"));
        editor.click();
        editor.sendKeys("This is my first note.");

        driver.findElement(By.xpath("//strong[text()='Save Changes']")).click();

        // Verify note creation
        WebElement createdNote = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//h2[text()='First Note']")));
        Assert.assertTrue(createdNote.isDisplayed(), "Note Creation Failed!");
    }

    @Test(priority = 4)
    public void testCreateNotebook() {
        driver.findElement(By.xpath("//strong[text()='Create NoteBook']")).click();
        
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("title"))).sendKeys("My First Notebook");
        
        driver.findElement(By.xpath("//strong[text()='Submit']")).click();

        // Verify notebook creation
        WebElement notebook = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//h2[text()='My First Notebook']")));
        Assert.assertTrue(notebook.isDisplayed(), "Notebook Creation Failed!");
    }

    @Test(priority = 5)
    public void testEditNote() {
        driver.findElement(By.xpath("//strong[text()='Write Notes']")).click();
        
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("input[placeholder='Notes Title']"))).sendKeys("Updated Note");

        WebElement editor = driver.findElement(By.cssSelector(".ql-editor"));
        editor.click();
        editor.clear();
        editor.sendKeys("This is an updated note.");

        driver.findElement(By.xpath("//strong[text()='Save Changes']")).click();

        // Verify note update
        WebElement updatedNote = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//h2[text()='Updated Note']")));
        Assert.assertTrue(updatedNote.isDisplayed(), "Note Update Failed!");
    }

    @Test(priority = 6)
    public void testDeleteNote() {
        List<WebElement> deleteBtns = driver.findElements(By.xpath("//button[contains(@aria-label, 'Delete')]"));

        if (!deleteBtns.isEmpty()) {
            deleteBtns.get(0).click(); // Delete the first note
            driver.switchTo().alert().accept(); // Accept alert confirmation

            // Verify note deletion
            List<WebElement> notesAfterDeletion = driver.findElements(By.xpath("//h2[text()='Updated Note']"));
            Assert.assertTrue(notesAfterDeletion.isEmpty(), "Note Deletion Failed!");
        } else {
            Assert.fail("No notes available to delete!");
        }
    }

    @Test(priority = 7)
    public void testLogout() {
        driver.findElement(By.xpath("//button[contains(text(),'Logout')]")).click();

        // Verify logout
        WebElement loginBtn = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//strong[text()='Login']")));
        Assert.assertTrue(loginBtn.isDisplayed(), "Logout Failed!");
    }

    @AfterMethod(alwaysRun = true)
    public void tearDown() {
        driver.quit();
    }
}
